@page "/gradepage"
@inject HttpClient http;
@using MudBlazorWASM.Client.Components.GradesCmpts
@using MudBlazorWASM.Shared.Models

<MudTabs Elevation="4" Rounded="true" Centered="true" Color="@Color.Secondary">
    <MudTabPanel Text="e-Grades Summary">
        <MudText Class="mb-8">List of Grades uploaded by the Instructor.</MudText>
@if (listGrades == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{

    <MudTable Items="@listGrades" Dense="true" Hover="true" Striped="true">
        <ToolBarContent>
            <MudButton></MudButton>
            <MudText Typo="Typo.h6">List Of All Grades</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<SummaryGrade, object>(x=>x.Id)">No.</MudTableSortLabel></MudTh>
            <MudTh>Offer#</MudTh>
            <MudTh>Code</MudTh>
            <MudTh>Subject</MudTh>
            <MudTh>StudentID</MudTh>
            <MudTh>Lastname</MudTh>
            <MudTh>Firstname</MudTh>
            <MudTh>PRE</MudTh>
            <MudTh>MID</MudTh>
            <MudTh>SEMI</MudTh>
            <MudTh>FINAL</MudTh>
            <MudTh>AVE</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="No.">@context.Id</MudTd>
            <MudTd DataLabel="Offer #">@context.Offerno</MudTd>
            <MudTd DataLabel="Course #">@context.Courseno</MudTd>
            <MudTd DataLabel="Subject">@context.Subject</MudTd>
            <MudTd DataLabel="Student ID">@context.Studno</MudTd>
            <MudTd DataLabel="Lastname">@context.Last</MudTd>
            <MudTd DataLabel="Firstname">@context.First</MudTd>
            <MudTd DataLabel="PRELIM">@context.Term1</MudTd>
            <MudTd DataLabel="MIDTERM">@context.Term2</MudTd>
            <MudTd DataLabel="SEMI">@context.Term3</MudTd>
            <MudTd DataLabel="FINAL">@context.Term4</MudTd>
            <MudTd DataLabel="AVERAGE">@context.Average</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{20, 50, 100,500,1000}" />
        </PagerContent>
    </MudTable>
}

    </MudTabPanel>
    <MudTabPanel Text="Upload Grades">
        <AddGradesByOfferNo></AddGradesByOfferNo>
    </MudTabPanel>
    <MudTabPanel Text="Modify Grades">

    </MudTabPanel>
    <MudTabPanel Text="Utility Tools">

    </MudTabPanel>
</MudTabs>

@code {
    private List<SummaryGrade> listGrades;
    private string searchString1 = "";
    private SummaryGrade selectedItem1 = null;
    private HashSet<SummaryGrade> selectedItems = new HashSet<SummaryGrade>();

    private IEnumerable<SummaryGrade> Elements = new List<SummaryGrade>();

    protected override async Task OnInitializedAsync()
    {
        listGrades = await http.GetFromJsonAsync<List<SummaryGrade>>("api/grades/GetAllGrades");
    }

   // private bool FilterFunc1(SummaryGrade element) => FilterFunc(element, searchString1);

    //private bool FilterFunc(SummaryGrade element, string searchString)
    //{
    //    if (string.IsNullOrWhiteSpace(searchString))
    //        return true;
    //    if (element.Offerno.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
    //        return true;
    //    if (element.Studno.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
    //        return true;
    //    if ($"{element.Last} {element.First} {element.Mi}".Contains(searchString))
    //        return true;
    //    return false;
    //}

}